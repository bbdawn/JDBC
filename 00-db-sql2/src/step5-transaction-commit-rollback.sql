/*
 * Transaction(트랜잭션) : 작업단위, 업무단위
 * 						 더 이상 쪼갤 수 없는 작업단위 -> 원자성 
 * 						 데이터베이스의 상태를 변경시키기 위해 수행하는 작업단위 
 * 						 원자성 일관성 고립성 지속성 
 */						
/*
 * DCL -> COMMIT, ROLLBACK
 * 1. COMMIT
 * 			변경된 작업 내용을 실제 데이터베이스에 반영
 * 2. ROLLBACK
 * 			변경된 작업 내용을 취소하고 이전 상태로 되돌림
 */

/*
	카드 발급받으면 포인트 10만원 줄게~ 라고 했을 때***
	카드 발급 작업단위 1.카드등록발급 2.포인트등록발급
	카드발급 트랜잭션
	만약 카드발급 즉 1번 작업 완료
	    포인트발급 즉 2번 작업시 오류 발생??
	이렇게 되면 안 됨! -> 1,2번이 한개의 트랜잭션이 되어야함. (문제발생시 롤백하면 되니까. 그러면 1번도 무효가 됨)
	----------
	1. 카드발급
	2. 약속한 포인트 지급
	1,2번 두 사항이 모두 정상적으로 실행되었을 때만 실제 DB에 저장되어야 한다 -> COMMIT
	만약 트랜잭션 내부의 문제가 발생했을 경우 (예를 들면 카드 발급이 정상적으로 진행되고 포인트 발급시 문제 발생)
	에는 ROLLBACK처리를 해서 
	작업내용을 취소(1.카드발급취소)하고 이전 상태로 되돌려야한다 
*/